{"version":3,"file":"fisea.umd.js","sources":["../src/parse.ts"],"sourcesContent":["export interface FiseaOptions {\n  separator: string;\n}\n\nconst defaultOptions = {\n  separator: ':'\n};\n\nexport function parse<T extends string>(\n  text: string,\n  options: FiseaOptions = defaultOptions\n): Record<T, string[] | undefined> & {_?: string[]} & {\n  [k: string]: string[] | undefined;\n} {\n  const chunks = text.split(/\\s+/);\n\n  return chunks.reduce(\n    (result, chunk) => {\n      const splitted = chunk.split(options.separator);\n      if (splitted.length === 1) {\n        if (result._ === undefined) {\n          result._ = [];\n        }\n\n        result._.push(splitted[0]);\n      } else {\n        const [prop, value] = splitted;\n        if (result[prop] === undefined) {\n          result[prop] = [];\n        }\n\n        (result[prop] as any).push(value);\n      }\n\n      return result;\n    },\n    {} as Record<T, string[] | undefined> & {_?: string[]} & {\n      [k: string]: string[] | undefined;\n    }\n  );\n}\n"],"names":["defaultOptions","separator","text","options","split","reduce","result","chunk","splitted","length","undefined","_","push","prop","value"],"mappings":"2KAIA,IAAMA,GACJC,UAAW,sBAIXC,EACAC,GAMA,oBANAA,KAIeD,EAAKE,MAAM,OAEZC,OACZ,SAACC,EAAQC,GACP,IAAMC,EAAWD,EAAMH,MAAMD,EAAQF,WACrC,GAAwB,IAApBO,EAASC,YACMC,IAAbJ,EAAOK,IACTL,EAAOK,MAGTL,EAAOK,EAAEC,KAAKJ,EAAS,QAClB,CACE,IAAAK,OAAMC,YACQJ,IAAjBJ,EAAOO,KACTP,EAAOO,OAGRP,EAAOO,GAAcD,KAAKE,GAG7B,OAAOR"}